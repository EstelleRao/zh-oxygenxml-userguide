<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="glossary">
    <title>名词解释</title>
    <body>
        <p>
            <table frame="all" id="table_nnm_4h4_f1c">
                <tgroup cols="2">
                    <colspec colname="c2" colnum="1" colwidth="0.6*"/>
                    <colspec colname="c3" colnum="2" colwidth="1.8*"/>
                    <thead>
                        <row>
                            <entry colsep="1" rowsep="1">名词</entry>
                            <entry colsep="1" rowsep="1">解释</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>DITA map</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    ><p>DITA map 用于定义不同 topic 之间的层级关系，使其形成一个完整的、易于使用的、易于理解的信息产品，例如使用手册、安装手册、安全手册、装机手册、再处理说明。</p><p>DITA map 也可用于定义其他重要资源，例如定义 topic 和图片的 key，定义变量，定义条件发布属性。</p>DITA map 有两种类型：基础的 DITA map 和 DITA Bookmap。两种类型使用不同的结构和元素。<p>DITA map 的文件格式均为 <b>.ditamap</b>，常见的输出格式包括 PDF 手册、HTML 网页和在线帮助文档。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>DITA topic（主题）</p>
                            </entry>
                            <entry colsep="1" rowsep="1">
                                <p>DITA topic 是一个独立的信息单元，存储在独立的 DITA 文件中，文件格式为 <b>.dita</b>。</p>
                                <p>每个 topic 内容独立，紧扣一个要点，回答一个问题，不会扩展到其他主题。</p>
                            </entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>Element（元素）</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >用于标记文档的组成部分，如标题、段落、表格、图片等。使用 <codeph>&lt;></codeph> 符号表示，成对出现，如段落元素 <codeph>&lt;p>&lt;/p></codeph>。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>Attribute（属性）</p>
                            </entry>
                            <entry colsep="1" rowsep="1">
                                <p>除了标记文档组成部分，如图片和超链接引用（@href ）、图片尺寸和位置（@placement、@width），还可用于条件发布，如@product属性。</p>
                            </entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>Key</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                        >key 可以看作是一个唯一的标识符，用于识别文档中的某个元素，如段落、标题、图片等，相当于这些元素的别名。<p>key 通常以 <codeph>&lt;keydef></codeph> 元素的形式在 DITA map 中定义，原则是先定义后引用。</p><p>key 的使用使得 DITA 文档变得更易维护和管理，是仓库架构调整和图片调整的前提条件。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>Keyscope</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >@keyscope 属性用于定义 key 的作用域，避免同名 key 产生冲突。当引用了不同 DITA map 中的同名 key 时，只有一个 key 会生效。<p>为了保证引用的同名 key 都生效，可以在 DITA map 中定义 @keyscope 属性，通过 @keyscope 属性和 @keys 属性的组合区分同名 key。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>直接引用</p>
                            </entry>
                            <entry colsep="1" rowsep="1">
                                <p>直接引用是基于资源 URI（统一资源标识符，可以理解为资源路径或存储位置）的引用，通过在 DITA 文件中指定资源的 URI 来引用资源。如果引用文件和被引用资源的相对位置发生变化，则需要更新每处引用的资源路径。</p>
                            </entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>间接引用</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                >间接引用是基于资源别名的引用，通过在 DITA map 中定义资源别名，然后在 DITA 文件中插入资源别名来引用资源。如果引用文件和被引用资源的相对位置发生变化，只需回到定义资源别名的文件修改一次资源路径。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>完整复用</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                >完整复用指一个内容模块在多个信息产品中共同使用，在多个信息产品中呈现的内容一模一样。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>可变化复用</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                >可变化复用是指一个内容模块经过少许变化，即可在多个信息产品中共同使用。可以使用条件发布或变量实现可变化复用。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>条件发布</p>
                            </entry>
                            <entry colsep="1" rowsep="1">
                                <p>DITA 提供一种使用 <b>.ditaval</b> 文件过滤和标记内容的处理方式。可以根据条件发布属性（比如@product 属性）和属性值（比如说明书料号）进行过滤，发布不同的信息产品（比如不同料号对应的 PDF 版说明书）。</p>
                            </entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>过滤文件</p>
                            </entry>
                            <entry colsep="1" rowsep="1">保存条件发布属性和值，在发布场景中添加过滤文件可发布指定的说明书。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>变量</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                >变量是可变化的值。当多个产品复用同一个内容模块（比如禁忌证或适用范围），仅个别内容元素（比如产品名称）不一样时，可使用变量处理这种经常变化的内容元素，确保内容的最大化复用和内容发布的准确性。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>页面变量</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                >出现在页面级元素的变量，比如出现在封面、页眉、页脚的系统名称和说明书名称，以及出现在声明页、封底的版权归属年份、料号、版本号。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>产品名称变量</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                >当多个产品复用同一个内容模块（比如禁忌证或适用范围），仅产品名称不一样时，可使用变量处理不同的产品名称，确保不同产品手册显示正确的产品名称。</entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>公共主题</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >公共主题分为通用公共主题和业务公共主题，区分不同语言。<p>通用公共主题适用于全部产品（C1000、S1000、SUD等）的全部项目（K2、K9等），比如版权、商标、声明、文档符号说明、联系信息。</p>业务公共主题适用于单个产品的全部项目，比如冲洗、刷洗步骤。<p>为公共主题定义 key 后，可以使用 key 引用公共主题。如需更新内容，只需在公共主题中更新一次。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>公共组件</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >公共组件分为通用公共组件和业务公共组件，区分不同语言。<p>通用公共组件适用于全部产品的全部项目，可以是一个段落（如预期用途、禁忌证）、一个安全警示、一张图片或者一个表格。</p><p>业务公共组件适用于单个产品的全部项目，比如仅适用于单个产品的安全警示。</p><p>为公共组件定义 id 后，可以使用 id 引用公共组件。如需更新内容，只需在公共组件管理文件中更新一次。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>公共图片</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >公共图片分为通用公共图片和业务公共图片，区分不同语言。<p>通用公共图片适用于全部产品的全部项目，比如通用标签、文档符号、安全提示符号。</p>业务公共图片适用于单个产品的全部项目，比如UI图标和符号。<p>为公共图片定义 key 后，可以使用 key 引用公共图片。如需替换，直接替换公共图片即可。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>公共名称</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >公共名称通常包括公司名称、产品名称和关键单元及部件名称。对于法规重点关注且频繁更新的高频次术语，可以将其定义成公共名称，作为复用组件统一管理和维护。<p>公共名称为通用公共名称，适用于全部产品（C1000、S1000、SUD等）的全部项目（K2、K9等），但区分不同语言。</p><p>为公共名称定义 id 后，可以使用 id 引用公共名称。如需更新名称，只需在公共名称管理文件中更新一次。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>metadata（元数据）</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >元数据是指与文档或文档组件相关联的信息，用于描述文档内容、属性和特征。这些元数据可以提供关于文档的各种信息，包括作者、创建日期、修改历史、版本或料号等。<p>元数据对于团队协作尤为重要，可以帮助团队成员追踪文档的修改历史，了解文档的内容和目的。</p><p>元数据对于文档的搜索、分类和索引也非常有用，可以帮助用户更快地找到所需的信息，也为自动化和工具集成（比如条件发布）提供了支持。</p></entry>
                        </row>
                        <row>
                            <entry colsep="1" rowsep="1">
                                <p>元数据定义集</p>
                            </entry>
                            <entry colsep="1" rowsep="1"
                                    >简单来说，元数据定义集用于定义和管理所有说明书的元数据（即料号），通常存放在通用公共仓库的 global 目录。<p>从具体实现来说，元数据定义集用于集中存储、管理和共享自定义的条件发布属性（比如 @product 属性）和值（比如说明书的料号），通过自定义属性和 DITA 默认属性（如 @product 属性）的关联关系，将自定义属性的值应用于 DITA 默认属性，从而满足多样化的条件发布需求。</p></entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </p>
    </body>
</topic>
